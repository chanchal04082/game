<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Snake Game</title>
  <style>
    body {
      background: #000;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      font-family: Arial, sans-serif;
    }

    canvas {
      border: 2px solid #fff;
      background-color: #111;
    }

    #score {
      position: absolute;
      top: 20px;
      color: white;
      font-size: 24px;
    }
  </style>
</head>
<body>
  <div id="score">Score: 0</div>
  <canvas id="game" width="400" height="400"></canvas>

  <script>
    const canvas = document.getElementById('game');
    const ctx = canvas.getContext('2d');
    const scoreDisplay = document.getElementById('score');

    const gridSize = 20;
    const tileCount = canvas.width / gridSize;

    let snake = [{ x: 10, y: 10 }];
    let apple = { x: 5, y: 5 };
    let velocity = { x: 0, y: 0 };
    let score = 0;

    function gameLoop() {
      update();
      draw();
      setTimeout(gameLoop, 100);
    }

    function update() {
      const head = { x: snake[0].x + velocity.x, y: snake[0].y + velocity.y };

      // Game over conditions
      if (
        head.x < 0 || head.y < 0 ||
        head.x >= tileCount || head.y >= tileCount ||
        snake.some(segment => segment.x === head.x && segment.y === head.y)
      ) {
        alert('Game Over! Final Score: ' + score);
        document.location.reload();
        return;
      }

      snake.unshift(head);

      // Eat apple
      if (head.x === apple.x && head.y === apple.y) {
        score++;
        scoreDisplay.textContent = 'Score: ' + score;
        placeApple();
      } else {
        snake.pop();
      }
    }

    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Draw snake
      ctx.fillStyle = '#0f0';
      snake.forEach(segment => {
        ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize, gridSize);
      });

      // Draw apple
      ctx.fillStyle = '#f00';
      ctx.fillRect(apple.x * gridSize, apple.y * gridSize, gridSize, gridSize);
    }

    function placeApple() {
      apple.x = Math.floor(Math.random() * tileCount);
      apple.y = Math.floor(Math.random() * tileCount);
    }

    document.addEventListener('keydown', e => {
      switch (e.key) {
        case 'ArrowUp':
          if (velocity.y === 0) velocity = { x: 0, y: -1 };
          break;
        case 'ArrowDown':
          if (velocity.y === 0) velocity = { x: 0, y: 1 };
          break;
        case 'ArrowLeft':
          if (velocity.x === 0) velocity = { x: -1, y: 0 };
          break;
        case 'ArrowRight':
          if (velocity.x === 0) velocity = { x: 1, y: 0 };
          break;
      }
    });

    gameLoop();
  </script>
</body>
</html>
